{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBACrCI,EAAML,SAASC,cAAc,UAEnCF,EAAKO,iBAAiB,UAMtB,SAAsBC,GAChBA,GAAKA,EAAEC,gBAAgBD,EAAEC,iBAC7BC,EAAQC,OAAOR,EAAWS,OAC1BC,EAASF,OAAON,EAAYO,OAC5BE,EAAOH,OAAOP,EAAUQ,OAExB,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCC,WAAWC,EAAkBH,EAAMC,E,IAXvC,IAAIL,EAAQ,GACRG,EAAS,GACTC,EAAO,GA4BX,SAASG,EAAiBC,IAd1B,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BV,YAAW,KACLK,EACFI,EAAQ,CAAEN,SAAUA,EAAUQ,MAAOP,IAErCM,EAAO,CAAEP,SAAUA,EAAUQ,MAAOP,GAAQ,GAE7CA,EAAM,G,EAKXQ,CAAcV,EAAQR,GACnBmB,MAAK,EAACV,SAAEA,EAAUQ,MAAAG,MACjBhC,EAAAiC,OAAOC,QAAQ,qBAAqBb,QAAeW,MAAW,CAC5DG,QAAS,IACTd,SAAU,cACVe,SAAU,UAEZC,QAAQC,IAAI,uBAAqBjB,QAAiBW,MAAU,IAE7DO,OAAM,EAAClB,SAAEA,EAAUQ,MAAAW,MAClBxC,EAAAiC,OAAOQ,QAAQ,oBAAoBpB,QAAemB,MAAW,CAC3DL,QAAS,IACTd,SAAU,cACVe,SAAU,UAEZC,QAAQC,IAAI,sBAAoBjB,QAAemB,MAAU,IAE7D5B,GAASI,C,CAIXd,EAAKwC,MAAMC,QACT,qEACFnC,EAAIkC,MAAMC,QACR,8IAEF,MAAMC,EAASzC,SAAS0C,iBAAiB,SACzC,IAAK,MAAMC,KAASF,EAClBE,EAAMJ,MAAMC,QACV,2GAGJ,MAAMI,EAAS5C,SAAS0C,iBAAiB,SACzC,IAAK,MAAMG,KAASD,EAClBC,EAAMN,MAAMO,SAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button');\n\nform.addEventListener('submit', onFormSubmit);\n\nlet delay = '';\nlet amount = '';\nlet step = '';\n\nfunction onFormSubmit(e) {\n  if (e && e.preventDefault) e.preventDefault();\n  delay = Number(inputDelay.value);\n  amount = Number(inputAmount.value);\n  step = Number(inputStep.value);\n  \n  for (let i = 1; i <= amount; i += 1) {\n    setTimeout(iterationPromise, step, i);\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n\nfunction iterationPromise(amount) {\n  createPromise(amount, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n        position: 'left-center',\n        distance: '130px',\n      });\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n        position: 'left-center',\n        distance: '130px',\n      });\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  delay += step;\n}\n\n// styling elements\nform.style.cssText =\n  'display: flex; gap: 10px; max-width: 600px; align-items: flex-end;';\nbtn.style.cssText =\n  'border: none; border-radius: 4px; width: 200px; padding: 7px; background-color: rgba(167, 191, 190, 0.5); font-size: 14px; cursor: pointer;';\n\nconst inputs = document.querySelectorAll('input');\nfor (const input of inputs) {\n  input.style.cssText =\n    'border: none; outline: 1px solid rgb(167, 191, 190); height: 28px; border-radius: 4px; margin-top: 8px;}';\n}\n\nconst labels = document.querySelectorAll('label');\nfor (const label of labels) {\n  label.style.fontSize = '14px';\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$btn","addEventListener","e","preventDefault","$47d4ff9957288465$var$delay","Number","value","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$step","i","setTimeout","$47d4ff9957288465$var$iterationPromise","amount1","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","delay","$47d4ff9957288465$var$createPromise","then","delay2","Notify","success","timeout","distance","console","log","catch","delay3","failure","style","cssText","$47d4ff9957288465$var$inputs","querySelectorAll","input","$47d4ff9957288465$var$labels","label","fontSize"],"version":3,"file":"03-promises.39ccc34d.js.map"}